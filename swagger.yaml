openapi: 3.0.0
info:
  title: Pub-Sub APIs
  version: 0.0.0
  description: API for Pub-Sub management

tags:
  - name: Subscriptions
    description: Operations related to subscriptions
  - name: Subscription Events
    description: Operations related to subscription events
  - name: Environment Promotions
    description: Operations related to moving subscriptions between environments

    
paths:
  /subscriptions:
    post:
      tags:
        - Subscriptions
      summary: Create a subscription
      description: Create a new subscription with specified details.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subscription'
      responses:
        '200':
          description: Subscription created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionResponse'
    get:
      tags:
        - Subscriptions
      summary: Get all subscriptions
      description: Retrieve all subscriptions.
      responses:
        '200':
          description: Subscriptions retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionListResponse'
  /subscriptions/{subscriptionId}:
    get:
      tags:
        - Subscriptions
      summary: Get a subscription
      description: Retrieve details of a specific subscription.
      parameters:
        - name: subscriptionId
          in: path
          description: Unique identifier of the subscription
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Subscription details retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionResponse'
    delete:
      tags:
        - Subscriptions
      summary: Delete a subscription
      description: Delete a specific subscription.
      parameters:
        - name: subscriptionId
          in: path
          description: Unique identifier of the subscription
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Subscription deleted successfully
        '400':
          description: Bad request - Subscription associated with a callbackUrl
    patch:
      tags:
        - Subscriptions
      summary: Update a subscription
      description: Update the details of a specific subscription.
      parameters:
        - name: subscriptionId
          in: path
          description: Unique identifier of the subscription
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionUpdateRequest'
      responses:
        '200':
          description: Subscription updated successfully

  /subscription-events/last-published-record:
    get:
      tags:
        - Subscription Events
      summary: Get the last published record for a subscription
      description: Retrieve the last published record for a subscription if the subscription ID is provided.
      parameters:
        - name: subscriptionId
          in: query
          description: Unique identifier of the subscription
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Last published record retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LastPublishedRecordResponse'
        '404':
          description: No published records found for the given subscription
  /subscription-events/publishing-delay:
    get:
      tags:
        - Subscription Events
      summary: Get the delay in publishing via callbackUrl
      description: Retrieve the delay in publishing via callbackUrl for a subscription if the subscription ID is provided.
      parameters:
        - name: subscriptionId
          in: query
          description: Unique identifier of the subscription
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Publishing delay retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublishingDelayResponse'
        '404':
          description: No published records found for the given subscription
  /subscription-events/message-statistics:
    get:
      tags:
        - Subscription Events
      summary: Get message statistics for a subscription
      description: Retrieve the number of messages pushed in a time window or the current rate of messages for a subscription if the subscription ID is provided.
      parameters:
        - name: subscriptionId
          in: query
          description: Unique identifier of the subscription
          required: true
          schema:
            type: string
        - name: timeWindow
          in: query
          description: Time window for message statistics (in seconds)
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Message statistics retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageStatisticsResponse'
        '404':
          description: No published records found for the given subscription
  /environment-promotions/promote-subscription:
    post:
      tags:
        - Environment Promotions
      summary: Promote subscription to a different environment
      description: Promote a subscription, along with its associated callbackUrl, to a specified environment.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PromotionRequest'
      responses:
        '200':
          description: Subscription promoted successfully

components:
  schemas:
    CallbackUrlRegistration:
      type: object
      properties:
        url:
          type: string
        retryCount:
          type: integer
        authHeader:
          type: string
        customHeaders:
          type: object
        useCustomSSL:
          type: boolean
        customSSLCertificate:
          type: string
          format: binary
    Subscription:
      type: object
      properties:
        name:
          type: string
        orgName:
          type: string
        teamName:
          type: string
        subscribedEntityName:
          type: string
        callbackUrlDetails:
          $ref: '#/components/schemas/CallbackUrlRegistration'
        metadataResponse:
          type: object
        status:
          type: string
          enum:
            - active
            - paused
            - inactive
    SubscriptionResponse:
      type: object
      properties:
        subscriptionId:
          type: string
    SubscriptionListResponse:
      type: array
      items:
        $ref: '#/components/schemas/Subscription'
    SubscriptionUpdateRequest:
      type: object
      properties:
        name:
          type: string
        orgName:
          type: string
        teamName:
          type: string
        subscribedEntityName:
          type: string
        callbackUrlDetails:
          $ref: '#/components/schemas/CallbackUrlRegistration'
        metadataResponse:
          type: object
        status:
          type: string
          enum:
            - active
            - paused
            - inactive

    LastPublishedRecordResponse:
      type: object
      properties:
        lastPublishedRecord:
          type: object  # Define the structure of the last published record
    PublishingDelayResponse:
      type: object
      properties:
        publishingDelay:
          type: integer  # Define the structure of the publishing delay
    MessageStatisticsResponse:
      type: object
      properties:
        messageCount:
          type: integer  # Define the structure of the message statistics
        currentRate:
          type: number   # Define the structure of the current rate
    PromotionRequest:
      type: object
      properties:
        subscriptionId:
          type: string
          description: Unique identifier of the subscription to be promoted
        arableEnvironmentName:
          type: string
          description: Name of the target environment for promotion
          enum:
            - Prod(ALP)
            - Stage(ALS)
            - Test(ALT)
            - Dev(ALD)
servers:
  # Added by API Auto Mocking Plugin
  # Added by API Auto Mocking Plugin
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/demo-arable/Pub-Sub/1.0.0
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/demo-arable/Webhooks/1.0.0
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/demo-arable/CallbackUrls/1.0.0
